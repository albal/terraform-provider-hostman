name: Build & Release Terraform Provider (Linux)

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'    # semantic-version tags, e.g. v1.2.3

permissions:
  contents: write

jobs:
  build:
    name: 🏗 Build linux_amd64
    runs-on: ubuntu-latest
    outputs:
      artifact-name: terraform-provider-hostman_${{ github.ref_name }}_linux_amd64.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Install dependencies
        run: go mod tidy

      - name: Build provider binary
        run: |
          mkdir -p bin
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o bin/terraform-provider-hostman

      - name: Zip provider for release
        id: zip
        run: |
          ARTIFACT=terraform-provider-hostman_${{ github.ref_name }}_linux_amd64.zip
          zip -j bin/${ARTIFACT} bin/terraform-provider-hostman
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT

      - name: Upload build artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: terraform-provider-hostman-linux-amd64
          path: bin/${{ steps.zip.outputs.artifact }}

  release:
    name: 🚀 Publish GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Download zipped binary
        uses: actions/download-artifact@v4
        with:
          name: terraform-provider-hostman-linux-amd64
          path: release/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload provider zip to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/${{ needs.build.outputs.artifact-name }}
          asset_name: ${{ needs.build.outputs.artifact-name }}
          asset_content_type: application/zip
